[{"id":0,"href":"/notes/links.html","title":"Links","section":"Notes","content":" Technical Mobile The Search for a FLOSS Mobile OS (Aug 2021) https://blog.emacsen.net/blog/2021/08/23/floss-mobile-os-aug-2021/ https://news.ycombinator.com/item?id=28296738\nProgramming Data Structures and Algorithms in JavaScript https://news.ycombinator.com/item?id=20634409 https://amejiarosario.gumroad.com/l/dsajs\nJohn Carmack on Functional Programming (2013 https://news.ycombinator.com/item?id=15036591\nA Thought Experiment: Using the ECS Pattern Outside of Game Engines https://news.ycombinator.com/item?id=21892126 https://adventures.michaelfbryan.com/posts/ecs-outside-of-games/ https://en.m.wikipedia.org/wiki/Entity_component_system#Characteristics\nWeb HTML, CSS Scrollspy with ‘just JavaScript’ https://medium.com/p1xts-blog/scrollspy-with-just-javascript-3131c114abdc\nTypeSafe CSS https://uglyduck.ca/typesafe-sans-css/\nTen modern layouts in one line of CSS https://web.dev/one-line-layouts/ https://news.ycombinator.com/item?id=24003385\nMy current HTML boilerplate https://www.matuzo.at/blog/html-boilerplate/ https://news.ycombinator.com/item?id=26952557\nHTML5 Boilerplate https://html5boilerplate.com/\nA simple guide to HTML \u0026lt;head\u0026gt; elements https://github.com/joshbuchea/HEAD\nHTML Tips (2020) https://markodenic.com/html-tips/ https://news.ycombinator.com/item?id=27054348\nDrop-in CSS Frameworks https://github.com/sw-yx/spark-joy#cssui-templates\nList of awesome CSS frameworks https://github.com/troxler/awesome-css-frameworks\nSimple.css https://simplecss.org/\nWater.css https://watercss.netlify.app/\nJS SolidJS https://www.solidjs.com/docs/1.0.0\nlit-html https://lit-html.polymer-project.org/guide\nC/C++ Show HN: Angeldust – a fast and efficient video game https://news.ycombinator.com/item?id=21858226\nC++ Core Guidelines (2021) https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md\nTracy Profiler https://github.com/wolfpld/tracy\nNetworking NNG\nhttps://nng.nanomsg.org/man/tip/index.html https://github.com/nanomsg/nng\nUDP Server-Client implementation in C https://www.geeksforgeeks.org/udp-server-client-implementation-c/\nSocket Programming in C/C++ https://www.geeksforgeeks.org/socket-programming-cc/\nLinux How NAT traversal works https://tailscale.com/blog/how-nat-traversal-works/\nVentoy https://github.com/ventoy/Ventoy\nMinIO Quickstart Guide https://github.com/minio/minio/blob/master/README.md\nPostgREST: REST API for any Postgres database https://news.ycombinator.com/item?id=25159097\nbash Some Relatively Obscure Bash Tips https://zwischenzugs.com/2020/05/09/some-relatively-obscure-bash-tips/\nEscaping strings in Bash using !:q https://til.simonwillison.net/bash/escaping-a-string\nAn Opinionated Guide to xargs https://www.oilshell.org/blog/2021/08/xargs.html\nxargs(1) — Linux manual page https://www.man7.org/linux/man-pages/man1/xargs.1.html\nHtmlq: like jq, but for html https://github.com/mgdm/htmlq https://news.ycombinator.com/item?id=28441880\nrlwrap(1) - Linux man page https://linux.die.net/man/1/rlwrap\nLinux Productivity Tools (2019) https://news.ycombinator.com/item?id=23229241\n"},{"id":1,"href":"/arch/vps.html","title":"Installing Arch Linux on a VPS","section":"Arch","content":" 1. Base system Create VPS, pick Debian 9.3 as OS. -→ didn’t work 2nd time, stuck in 1st reboot picked centos and worked\nCopy bootstrap files from M:\\vm\\isovps2arch to M:\\mshare\\vps2arch and cd into the latter folder.\nUpload bootstrap files to the newly created VPS:\nscp * root@IP_ADDRESS: Log into the VPS\nchmod +x vps2arch mv * / \u0026amp;\u0026amp; cd / ./vps2arch echo HOSTNAME \u0026gt; /etc/hostname sync; reboot -f 2. Create user useradd -m bert groupadd sudoers usermod -aG sudoers bert passwd bert pacman -Syu sudo vim ufw knockd lighttpd git allow group \u0026#39;sudoers\u0026#39; to use sudo (in conf file):\necho \u0026#39;%sudoers ALL=(ALL) ALL\u0026#39; \u0026gt; /etc/sudoers Install some packages:\npacman -Syu sudo vim ufw knockd lighttpd git use \u0026#39;vim\u0026#39; as \u0026#39;vi\u0026#39;:\nmv /usr/bin/vi /usr/bin/vi_BAK \u0026amp;\u0026amp; ln -s /usr/bin/vim /usr/bin/vi 3. sshd config On the client:\nssh-copy-id bert@IP_ADDRESS On the server:\nvi /etc/ssh/sshd_config LogLevel VERBOSE PermitRootLogin no PubkeyAuthentication yes PasswordAuthentication no AuthorizedKeysFile .ssh/authorized_keys ChallengeResponseAuthentication no UsePAM yes AllowUsers bert Add 5s delay to failed login attempts:\nbash -c \u0026#34;echo auth optional pam_faildelay.so delay=5000000 \u0026gt;\u0026gt; /etc/pam.d/system-login\u0026#34; reboot needed for future ufw config:\nreboot now 4. ufw, knockd ssh bert@IP_ADDRESS\nsudo -i ufw default deny ufw allow 22 ufw allow 80,443/tcp ufw enable vi /etc/knockd.conf [options] logfile = /var/log/knockd.log [SSH] sequence = PORT1,...,PORTN seq_timeout = 5 start_command = ufw allow from %IP% to any port 22 tcpflags = syn cmd_timeout = 10 stop_command = ufw delete allow from %IP% to any port 22 systemctl enable ufw.service systemctl start ufw.service systemctl enable knockd.service systemctl start knockd.service ufw delete allow 22 5. Customization Create dotfiles \u0026amp; tools:\nmkdir ~/tools \u0026amp;\u0026amp; cd ~/tools git clone https://github.com/bergoid/lswrappers.git git clone https://github.com/bergoid/rabot.git git clone https://github.com/bergoid/gt.git git clone https://github.com/bergoid/preppy.git git clone https://github.com/bergoid/dotfiles.git dotfiles/install_dotfiles echo hostnameColour=27 \u0026gt; ~/.localConfig Customize root env:\nsudo -i ln -s /home/bert/.tmux.conf .tmux.conf ln -s /home/bert/tools/dotfiles/.vim/ .vim ln -s /home/bert/tools/ tools ln -s /home/bert/.bash_profile .bash_profile ln -s /home/bert/.bashrc .bashrc 6. spigot server Enable AUR\nsudo pacman -Syu base base-devel mkcd ~/aur Install JRE\ngit clone https://aur.archlinux.org/jre.git cd jre makepkg -si Install bukkit/spigot:\nmkcd ~/mc curl \u0026#34;https://hub.spigotmc.org/jenkins/job/BuildTools/lastSuccessfulBuild/artifact/target/BuildTools.jar\u0026#34; -o BuildTools.jar java -jar BuildTools.jar sudo pacman -Syu tmux dialog vi /etc/locale.gen Uncomment: \u0026#39;en_US.UTF-8 UTF-8\u0026#39;\nlocale-gen echo LANG=en_US.UTF-8 \u0026gt; /etc/locale.conf sudo ufw allow 24680 Removed jre9:\nsudo pacman -Rs jre Install jre8 cd ~/aur git clone https://aur.archlinux.org/jre8.git cd jre8 makepkg -si CURRENT STATE\n"},{"id":2,"href":"/arch/virtualbox.html","title":"Installing Arch Linux in VirtualBox","section":"Arch","content":" 1. Arch Linux .iso file archlinux-2018.02.01-x86_64.iso from: https://archlinux.cu.be/iso/2018.02.01/archlinux-2018.02.01-x86_64.iso saved at: \u0026#34;M:vmisoarchlinux-2018.02.01-x86_64.iso\u0026#34;\n2. VirtualBox: This document applies to v5.2.6 Help/About VirtualBox\nFile/Check for updates\nin File/Preferences General: check vm default location: \u0026#34;M:vm\u0026#34;\nin File/Host Network Manager +\nCreate host-only network Set the IP address, e.g. : 192.168.236.2\nNetwork mask : 255.255.255.0\nnew vm +\nname: yeba make sure \u0026#34;M:vmyeba\u0026#34; doesn’t exist before creation of VM\ntype/version: arch linux 64 bit\nmemory 4096 MB\ncreate virtual HD\npress \u0026#34;create\u0026#34;\nFile size 30 GB\nVDI\ndynamically allocated\n\u0026#34;yeba\u0026#34; (powered off) appears in list of VMs\nyeba Settings:\nGeneral/Advanced: shared clipboard: bidirectional\nSystem/Motherboard:\nBoot order: Optical, Harddisk\nExtended features disable I/O APIC\ndisable EFI\nenable HW clock in UTC time\nDisplay +\nVideo Memory: depends on the resolution for 1080p (1920×1080): 8 MB\nfor 4k (3840×2160): 32 MB\nMonitor count: 1\nGraphics controller: VBoxSVGA\n3D acceleration: off\n- Storage +\nIDE secondary master: \u0026#34;M:vmisoarchlinux-2018.02.01-x86_64.iso\u0026#34; don’t enable LiveCD/DVD\n+\nSATA: add hard disk new hard disk\nVDI, dynamically allocated, 100 GB\nM:vmhddLargeData.vdi\nNetwork:::\nAdapter 1 : NAT\nAdapter 2 : Host-only, name: the one just created in File/Preferences\nShared Folders:::\n\u0026#34;C:\\Bert\\vm\\pub\u0026#34;\n\u0026#34;M:\\mshare\u0026#34;\nauto-mount, full access\n3. From LiveCD to working root login: start VM :\nloadkeys be-latin1 Network should work: :\ncurl www.google.com Syncronize the system clock with NTP :\ntimedatectl set-ntp true Create partition table :\nfdisk -l /dev/sda fdisk /dev/sda --\u0026gt; n : new partition --\u0026gt; p : primary partition --\u0026gt; enter : partition #1 --\u0026gt; enter : default first sector --\u0026gt; enter : default last sector --\u0026gt; w write partition table Format the partition :\nmkfs.ext4 /dev/sda1 Mount the partition :\nmount /dev/sda1 /mnt Make sure nearest mirror is first in the list :\nvi /etc/pacman.d/mirrorlist Install the \u0026#39;base\u0026#39; package group :\npacstrap /mnt base Create an fstab file :\ngenfstab -U /mnt \u0026gt;\u0026gt; /mnt/etc/fstab \u0026#39;chroot\u0026#39; into the newly created system :\narch-chroot /mnt Set the timezone :\nln -s /usr/share/zoneinfo/Europe/Brussels /etc/localtime Use UTC in hardware clock. Initialize the hardware clock from current system time. :\nhwclock --systohc --utc Use US locale :\necho en_US.UTF-8 UTF-8 \u0026gt; /etc/locale.gen locale-gen echo LANG=en_US.UTF-8 \u0026gt; /etc/locale.conf Use Belgian keymap :\necho KEYMAP=be-latin1 \u0026gt; /etc/vconsole.conf Set hostname :\necho yeba \u0026gt; /etc/hostname Set localhost alias :\nvi /etc/hosts In /etc/hosts, add: :\n127.0.0.1 yeba.localdomain yeba Set password :\npasswd Install boot loader \u0026#39;grub\u0026#39; :\npacman -Syu grub grub-install --target=i386-pc /dev/sda \u0026amp;\u0026amp; grub-mkconfig -o /boot/grub/grub.cfg Leave chroot environment and shutdown VM exit shutdown now\nin settings of VM: Remove disk from virtual drive\nstart VM\nsnapshot : Fresh install*\n4. A one-user system: Add a non-root user, with \u0026#39;sudo\u0026#39; rights :\nuseradd -m bert groupadd sudoers usermod -aG sudoers bert passwd bert enable NW-ing: :\nsystemctl enable dhcpcd@enp0s3.service systemctl start dhcpcd@enp0s3.service check connection: :\ncurl www.google.com Install \u0026#39;sudo\u0026#39; :\npacman -Syu sudo allow group \u0026#39;sudoers\u0026#39; to use sudo (in conf file): :\nvisudo -→ add line: :\n%sudoers ALL=(ALL) ALL log out of root session: :\nexit log back in as bert\ntest if sudo: :\nsudo -v (after entering password should not output anything if all is well)\nsnapshot : User bert, NW OK*\n5. Virtualbox Guest Additions Make sure your version of Virtualbox matches the version of the Guest Additions:\nVirtualBox:::\nHelp/About VirtualBox . File/Check for updates\nArch Linux guest OS:\npacman -Ss virtualbox-guest-utils Install guest additions \u0026amp; hwinfo :\nsudo pacman -Syu virtualbox-guest-utils hwinfo During installation, choose package: :\nvirtualbox-guest-modules-arch Enable the service :\nsudo systemctl enable vboxservice.service output: :\ncreated symlink /etc/systemd/system/multi-user.target.wants/vboxservice.service -\u0026gt; /usr/lib/systemd/system/vboxservice.service. Start the service :\nsudo systemctl start vboxservice.service Reboot VM :\nsudo reboot now And log in again\nGrant access to shared folders :\nsudo chmod 755 /media sudo usermod -aG vboxsf bert Logout and -in for the latter change to take effect\nsnapshot : vbox guest additions*\n6. Lots of packages Install some necessary packages: :\nsudo pacman -Syu base-devel clang git tig tmux time zip unzip dialog wget dos2unix hwinfo openssh knockd lighttpd ffmpeg python-mako python-sphinx asciidoc imagemagick poppler ghostscript fzf ripgrep fd moreutils Install xorg-related packages: :\nsudo pacman -Syu gvim xorg-server xorg-xinit xorg-apps xorg-apps xorg-xfontsel xorg-fonts-misc xclip xsel scrot unclutter dmenu ttf-dejavu ttf-inconsolata adobe-source-code-pro-fonts The 2 previous commands can be combined by pasting all package names in a text file in a vboxsf shared folder and running: :\nsudo pacman -Syu - \u0026lt; /media/sf_pub/packages.txt Install dwm from AUR: :\ncurl -L -O https://aur.archlinux.org/cgit/aur.git/snapshot/st.tar.gz curl -L -O https://aur.archlinux.org/cgit/aur.git/snapshot/dwm.tar.gz tar xzvf st.tar.gz tar xzvf dwm.tar.gz cd st \u0026amp;\u0026amp; makepkg -si \u0026amp;\u0026amp; cd - cd dwm \u0026amp;\u0026amp; makepkg -si \u0026amp;\u0026amp; cd - snapshot : Packages installed*\n7. Set up xorg, dwm Edit the config file read by \u0026#39;startx\u0026#39; :\nvim ~/.xinitrc Write: :\nVBoxClient --display VBoxClient --clipboard xrandr --output VGA-1 --mode 1920x1080 setxkbmap be unclutter -jitter 2 -noevents -root \u0026amp; exec dwm Start xorg, and dwm :\nstartx dwm starts up alt-enter to open st session show all possible screen resolutions: :\nxrandr dwm -v output: dwm-6.1\nst -v output: st 0.7\nThe latter versions are identical to the effie setup\nShutdown VM\nWindows Command Prompt: :\nVBoxManage setextradata \u0026#34;yeba\u0026#34; \u0026#34;CustomVideoMode1\u0026#34; \u0026#34;1600x900x24\u0026#34; Start vm\nSet video resolution at startup :\nsudoedit /etc/default/grub Find the line starting with \u0026#39;GRUB_CMDLINE_LINUX_DEFAULT=\u0026#39; and change it: :\nGRUB_CMDLINE_LINUX_DEFAULT=\u0026#34;quiet video=1600x900\u0026#34; Update grub with the new config :\nsudo grub-mkconfig -o /boot/grub/grub.cfg Auto-login on TTY1: :\nsudo systemctl edit getty@tty1 add lines: :\n[Service] ExecStart= ExecStart=-/usr/bin/agetty --autologin bert --noclear %I $TERM 8. Personal tools and config : mkdir ~/tools \u0026amp;\u0026amp; cd ~/tools git clone https://github.com/bergoid/lswrappers.git git clone https://github.com/bergoid/rabot.git git clone https://github.com/bergoid/gt.git git clone https://github.com/bergoid/preppy.git git clone https://github.com/bergoid/avtools.git git clone https://github.com/bergoid/dotfiles.git dotfiles/install_dotfiles\nDo manually: :\n~/tools/misc ~/.gtpresets ~/.ssh youtube-dl without pacman: :\nsudo curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl sudo chmod a+rx /usr/local/bin/youtube-dl Install knockd \u0026amp; reflector :\nsudo pacman -Syu knockd reflector Update mirrorlist: :\nsudo reflector --age 6 --fastest 64 --protocol https --sort rate --save /etc/pacman.d/mirrorlist Set remote URLS to ssh protocol: :\ngit remote set-url origin github_bergoid:bergoid/anthos.git # etc ... snapshot : Xorg, dwm, personal tools \u0026amp; config*\nCopy from effie ~/notes.txt ~/cheatsheet.txt\n9. Set up webserver and host→guest connectivity /home/bert/prj/webserver contains etc/lighttpd.conf www/index.html\nsudo -i cd /srv \u0026amp;\u0026amp; rm -rf * mkdir log ln -s /home/bert/prj/webserver repo ln -sf /etc/lighttpd.conf /srv/repo/etc/lighttpd.conf chmod 755 /home/bert\n/home/bert/prj/webserver/etc/lighttpd.conf server.modules = ( \u0026#34;mod_access\u0026#34;, \u0026#34;mod_accesslog\u0026#34;, ) + server.port = 80 server.username = \u0026#34;http\u0026#34; server.groupname = \u0026#34;http\u0026#34; server.document-root = \u0026#34;/srv/repo/www\u0026#34; server.errorlog = \u0026#34;/srv/log/error.log\u0026#34; accesslog.filename = \u0026#34;srv/log/access.log\u0026#34; dir-listing.activate = \u0026#34;enable\u0026#34; index-file.names = ( \u0026#34;index.html\u0026#34; ) mimetype.assign = ( \u0026#34;.html\u0026#34; ⇒ \u0026#34;text/html\u0026#34;, \u0026#34;.txt\u0026#34; ⇒ \u0026#34;text/plain\u0026#34;, \u0026#34;.css\u0026#34; ⇒ \u0026#34;text/css\u0026#34;, \u0026#34;.js\u0026#34; ⇒ \u0026#34;application/x-javascript\u0026#34;, \u0026#34;.jpg\u0026#34; ⇒ \u0026#34;image/jpeg\u0026#34;, \u0026#34;.jpeg\u0026#34; ⇒ \u0026#34;image/jpeg\u0026#34;, \u0026#34;.gif\u0026#34; ⇒ \u0026#34;image/gif\u0026#34;, \u0026#34;.png\u0026#34; ⇒ \u0026#34;image/png\u0026#34;, \u0026#34;\u0026#34; ⇒ \u0026#34;application/octet-stream\u0026#34; )\n/home/bert/prj/webserver/www/index.html Hello there!\nsudo systemctl start lighttpd.service sudo systemctl status lighttpd.service sudo systemctl enable lighttpd.service\ncurl localhost\nConfigure static IP address 192.168.56.110 and gateway 192.168.56.101 (or whatever the IP address of the host-only adapter is):\nsudo ip link set enp0s8 down\nWith netctl: sudoedit /etc/netctl/enp0s8 Description=\u0026#39;yeba static ip address\u0026#39; Interface=enp0s8 Connection=ethernet IP=static Address=(\u0026#39;192.168.56.110/24\u0026#39;)\nsudo netctl start enp0s8 sudo netctl enable enp0s8\nWith systemd-networkd: Check if systemd-networkd is enabled systemctl status systemd-networkd\nIf not sudo systemctl restart systemd-networkd.service\nsudoedit /etc/systemd/network/20-wired.network [Match] Name=enp0s8 + [Network] Address=192.168.56.110/24 DNS=192.168.56.101 + [Route] Gateway=192.168.56.101 Destination=0.0.0.0/0 Metric=1024\nip link set enp0s8 up sudo systemctl restart systemd-networkd.service\n-→ Visit 192.168.56.110 with browser on host OS\nTools for rp0w:\nsudo pacman -Syu dosfstools wpa_supplicant qemu-headless qemu-headless-arch-extra\nTools for React development:\nsudo pacman -Syu npm sudo npm install -g create-react-app\nAUR helper:\nsudo -i git clone https://aur.archlinux.org/pakku.git cd pakku makepkg -si\nCURRENT STATE*\n10. Further config TODO:\nnumlockx:: https://www.archlinux.org/packages/community/x86_64/numlockx/ https://github.com/rg3/numlockx\ntmux scrollback\ndwm monocle mode\nv autostart tmux 2 panes in every st terminal v change xorg clipboard v set vim yank buffer to xorg clipboard v bidir clipboard host/guest OK?\n"},{"id":3,"href":"/arch/pc.html","title":"Installing Arch Linux on a PC","section":"Arch","content":" This guide explains how to install vanilla Arch Linux on a PC.\nPrerequisites A PC or a laptop, with a USB port\nwifi adapter\na HDD with contents that are no longer needed\nA USB stick with contents that are no longer needed.\nA PC with a working operating system and internet access. This may also be the machine we will install Arch Linux on. We will assume a Linux(-like) environment with \u0026#39;curl\u0026#39; and \u0026#39;dd\u0026#39;\nThe strategy is as follows:\nOn the working PC, create a bootable USB stick with an Arch-based distro on it\nOn the PC destined for Arch installation, boot from this live-USB\nIn a bash terminal, install Arch on the HDD with the commands found in this guide\nCreating a live-USB On the working PC, download the .iso file of an Arch-based distro. ArchBang for instance: :\ncurl -LO https://sourceforge.net/projects/archbang/files/latest/download Plug in the USB stick and write the .iso file on it. Here we assume the USB stick is device \u0026#39;/dev/sdb\u0026#39;: :\nsudo -i dd bs=4M if=archbang-rc-1810-x86_64.iso of=/dev/sdb status=progress oflag=sync \u0026amp;\u0026amp; sync Booting from the USB stick Make sure the USB stick is plugged into the PC meant for Arch Linux, (Re-)boot the machine and enter the boot menu immediately at startup (press F9 or F12, or so). In the boot menu, choose to boot from USB. Once the OS has finished starting up, and if you’re using wifi, set up your internet connection with the GUI. In the OpenBox desktop environment of ArchBang, this can be done in the lower right corner of the screen.\nThen, open a bash prompt and set your keyboard layout, if needed :\nsetxkbmap be Test your internet connection :\ncurl www.example.com Go into a root prompt :\nsudo -i Make sure the system clock on the host OS is synced with NTP :\ntimedatectl set-ntp true Install target OS TODO: wipe MBR due to FlexNet?\n(Re-)partition the HDD. We assume the device is \u0026#39;/dev/sda\u0026#39;. A possible partition layout is:\n13G for the root partition\nThe swap partiton. Size: twice the amount of RAM.\nThe /home partition. Takes up the rest of the space.\nTo create the partition table, follow the instructions in \u0026#39;fdisk\u0026#39;. :\nfdisk /dev/sda Format the partitions :\nmkfs.ext4 /dev/sda1 mkswap /dev/sda2 swapon /dev/sda2 mkfs.ext4 /dev/sda3 Mount the partitions :\nmkdir -p /mnt/targetfs mount /dev/sda1 /mnt/targetfs mkdir -p /mnt/targetfs/home mount /dev/sda3 /mnt/targetfs/home Update the mirrorlist according to your location. Move the URL of a server near you to the top of the file. :\nvi /etc/pacman.d/mirrorlist Install some initial packages on the target system :\npacstrap /mnt/targetfs base grub sudo reflector Generate fstab file :\ngenfstab -U /mnt/targetfs \u0026gt;\u0026gt; /mnt/targetfs/etc/fstab \u0026#39;chroot\u0026#39; into the target filsystem :\narch-chroot /mnt/targetfs Set your timezone :\nln -sf /usr/share/zoneinfo/Europe/Brussels /etc/localtime Use UTC on the hardware clock :\nhwclock --systohc --utc Set the locale :\necho en_US.UTF-8 UTF-8 \u0026gt; /etc/locale.gen locale-gen echo LANG=en_US.UTF-8 \u0026gt; /etc/locale.conf Set the keyboard layout on the target system :\necho KEYMAP=be-latin1 \u0026gt; /etc/vconsole.conf Set the hostname :\necho tuma \u0026gt; /etc/hostname Set hostname as an alias for localhost :\necho \u0026#34;127.0.0.1 tuma.localdomain tuma\u0026#34; \u0026gt;\u0026gt; /etc/hosts Set the root password :\npasswd Add a non-root user, with \u0026#39;sudo\u0026#39; rights :\ngroupadd sudoers \u0026amp;\u0026amp; useradd -G sudoers -m bert Allow root and group ‘sudoers’ to use sudo :\necho \u0026#34;# sudoers file. Use \u0026#39;sudo visudo\u0026#39; to edit. See \u0026#39;man sudoers\u0026#39; and \u0026#39;man visudo\u0026#39;\u0026#34; \u0026gt; /etc/sudoers echo \u0026#34;%sudoers ALL=(ALL) ALL\u0026#34; \u0026gt;\u0026gt; /etc/sudoers echo \u0026#34;root ALL=(ALL) ALL\u0026#34; \u0026gt;\u0026gt; /etc/sudoers Set the password for this user :\npasswd bert Update \u0026amp; sort mirrorlist :\nreflector --age 12 --protocol https --sort rate --save /etc/pacman.d/mirrorlist Install some necessary packages: :\npacman -Syu base-devel clang git vim tmux time zip unzip dialog dos2unix hwinfo haveged arch-install-scripts wpa_supplicant openssh knockd Install some more optional packages: :\npacman -Syu lighttpd ffmpeg python-mako python-sphinx asciidoc Install xorg-related packages: :\nsudo pacman -Syu xorg-server xorg-xinit xorg-apps xorg-apps xorg-xfontsel xorg-fonts-misc unclutter dmenu ttf-inconsolata firefox Install boot loader \u0026#39;grub\u0026#39; :\ngrub-install --target=i386-pc /dev/sda Edit the grub config file: :\nsudoedit /etc/default/grub Change the value of the variable into this: :\nGRUB_CMDLINE_LINUX_DEFAULT=”quiet video=SVIDEO-1:d” Re-configure grub :\nsudo grub-mkconfig -o /boot/grub/grub.cfg Leave the \u0026#39;chroot\u0026#39; environment :\nexit Reboot into the installed OS :\nreboot now Set up networking Log in with the just-created non-root user.\nList the network interfaces :\nip link In the output you should see something like this: :\nwlp16s0: \u0026lt;BROADCAST,MULTICAST\u0026gt; ... Use a user-friendly GUI tool to setup a wireless connection :\nsudo wifi-menu -o Back in the bash terminal, test internet access. If this fails, wait a few seconds and try again. :\ncurl www.example.com Enable the netctl profile, so that it auto-starts after reboot. If you named your profile \u0026#39;mywifi\u0026#39; in the \u0026#39;wifi-menu\u0026#39; tool, the command looks like this: :\nsudo netctl enable mywifi Set up the window manager Enable the \u0026#39;haveged\u0026#39; entropy daemon :\nsudo systemctl start haveged sudo systemctl enable haveged Auto-login at startup :\nsudo systemctl edit getty@tty1 Add the lines: :\n[Service] ExecStart= ExecStart=-/usr/bin/agetty --autologin bert --noclear %I $TERM Download a customized version of \u0026#39;dwm\u0026#39;, \u0026#39;st\u0026#39; and \u0026#39;dmenu\u0026#39;, and build \u0026amp; install them :\ncd ~ mkdir prj cd prj git clone https://github.com/bergoid/dwm.git cd dwm sudo ./rebuild Edit .xinitrc :\nvi ~/.xinitrc And make sure it has the following contents: :\nsetxkbmap be unclutter -jitter 2 -noevents -root \u0026amp; exec dwm Start dwm :\nstartx Once you have installed \u0026#39;dotfiles\u0026#39; from \u0026#34;Personal tools\u0026#34;, dwm will auto-start at startup.\nPersonal tools Install git repos :\nmkdir ~/tools \u0026amp;\u0026amp; cd ~/tools git clone https://github.com/bergoid/lswrappers.git git clone https://github.com/bergoid/rabot.git git clone https://github.com/bergoid/gt.git git clone https://github.com/bergoid/preppy.git git clone https://github.com/bergoid/avtools.git git clone https://github.com/bergoid/dotfiles.git dotfiles/install_dotfiles youtube-dl without pacman: :\nsudo curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl sudo chmod a+rx /usr/local/bin/youtube-dl TODO:\npikaur\ndisallow root login?\nsshd config from VPS\nacpi events: lid, power button\n"},{"id":4,"href":"/sicp/chapter01/exercise-1.07.html","title":"Exercise 1.07","section":"Sicp","content":" Background: Section 1.1.7, Square Roots by Newton’s Method (define (square x) (* x x)) (define (average x y) (/ (+ x y) 2)) (define (improve guess x) (average guess (/ x guess))) (define (good-enough? guess x) (\u0026lt; (abs (- (square guess) x)) 0.001)) (define (sqrt-iter guess x) (if (good-enough? guess x) guess (sqrt-iter (improve guess x) x))) (define (sqrt x) (sqrt-iter 1.0 x)) Question: The good-enough? test used in computing square roots will not be very effective for finding the square roots of very small numbers. Also, in real computers, arithmetic operations are almost always performed with limited precision. This makes our test inadequate for very large numbers. Explain these statements, with examples showing how the test fails for small and large numbers. An alternative strategy for implementing good-enough? is to watch how guess changes from one iteration to the next and to stop when the change is a very small fraction of the guess. Design a square-root procedure that uses this kind of end test. Does this work better for small and large numbers?\nAnswer: For small numbers: When we take the sqrt of - for example - 0.0001:\n\u0026gt; (sqrt 0.0001) 0.03230844833048122 instead of the expected 0.01 we get 0.0323 …​ because the latter’s square is so close to 0.0001 that the difference is less than 0.001 - the error margin used in good-enough?.\nIf we replace good-enough? with:\n(define (good-enough? guess x) (\u0026lt; (abs (- (square guess) x)) (/ guess 1e4))) todo\n"},{"id":5,"href":"/sicp/chapter01/exercise-1.06.html","title":"Exercise 1.06","section":"Sicp","content":" Background: Section 1.1.7, Square Roots by Newton’s Method (define (square x) (* x x)) (define (average x y) (/ (+ x y) 2)) (define (improve guess x) (average guess (/ x guess))) (define (good-enough? guess x) (\u0026lt; (abs (- (square guess) x)) 0.001)) (define (sqrt-iter guess x) (if (good-enough? guess x) guess (sqrt-iter (improve guess x) x))) (define (sqrt x) (sqrt-iter 1.0 x)) Question: Alyssa P. Hacker doesn’t see why if needs to be provided as a special form. \u0026#34;Why can’t I just define it as an ordinary procedure in terms of cond?\u0026#34; she asks. Alyssa’s friend Eva Lu Ator claims this can indeed be done, and she defines a new version of if:\n(define (new-if predicate then-clause else-clause) (cond (predicate then-clause) (else else-clause))) Eva demonstrates the program for Alyssa:\n(new-if (= 2 3) 0 5) 5 (new-if (= 1 1) 0 5) 0 Delighted, Alyssa uses new-if to rewrite the square-root program:\n(define (sqrt-iter guess x) (new-if (good-enough? guess x) guess (sqrt-iter (improve guess x) x))) What happens when Alyssa attempts to use this to compute square roots? Explain.\nAnswer: The program gets stuck in an infinite loop.\nAs new-if is not a special form, both the consequent and the alternative expression are always evaluated, regardless of the value of the predicate. So, in the case of sqrt-iter the call to (sqrt-iter …​) in the consequent is endlessly recursive, and never finishes.\n"},{"id":6,"href":"/sicp/chapter01/exercise-1.05.html","title":"Exercise 1.05","section":"Sicp","content":" Question: Ben Bitdiddle has invented a test to determine whether the interpreter he is faced with is using applicative-order evaluation or normal-order evaluation. He defines the following two procedures:\n(define (p) (p)) (define (test x y) (if (= x 0) 0 y)) Then he evaluates the expression\n(test 0 (p)) What behavior will Ben observe with an interpreter that uses applicative-order evaluation? What behavior will he observe with an interpreter that uses normal-order evaluation? Explain your answer. (Assume that the evaluation rule for the special form if is the same whether the interpreter is using normal or applicative order: The predicate expression is evaluated first, and the result determines whether to evaluate the consequent or the alternative expression.)\nAnswer: Applicative-order evaluation: The program gets stuck in an infinite loop.\nWhen the program evaluates the second operand in the call (test 0 (p)) it will substitute (p) with its definition. As this definition is also (p), the substitution process is endlessly recursive.\nNormal-order evaluation: The program returns 0.\nWhen (test 0 (p)) is called, its operands are not evaluated immediately. Instead, the procedure test is expanded to:\n(if (= 0 0) 0 (p))) The predicate in the special form if evaluates to true, so the alternative (p) is never evaluated and the consequent\u0026#39;s value 0 is returned.\n"},{"id":7,"href":"/sicp/chapter01/exercise-1.04.html","title":"Exercise 1.04","section":"Sicp","content":" Question: Observe that our model of evaluation allows for combinations whose operators are compound expressions. Use this observation to describe the behavior of the following procedure:\n(define (a-plus-abs-b a b) ((if (\u0026gt; b 0) + -) a b)) Answer: In the body of a-plus-abs-b a b, the expression (if (\u0026gt; b 0) + -) evaluates to an arithmetic operation (either + or -, depending on the sign of b’s actual argument). The interpreter obtains a primitive procedure that it applies to the arguments replacing the formal parameters `a and b.\n"},{"id":8,"href":"/sicp/chapter01/exercise-1.03.html","title":"Exercise 1.03","section":"Sicp","content":" Question: Define a procedure that takes three numbers as arguments and returns the sum of the squares of the two larger numbers.\nAnswer: (define (square x) (* x x)) (define (sum-of-squares x y) (+ (square x) (square y))) (define (sum-squares-larger a b c) (cond ((and (\u0026lt;= a b) (\u0026lt;= a c)) (sum-of-squares b c)) ((and (\u0026lt;= b a) (\u0026lt;= b c)) (sum-of-squares a c)) (else (sum-of-squares a b)))) "},{"id":9,"href":"/sicp/chapter01/exercise-1.02.html","title":"Exercise 1.02","section":"Sicp","content":" Question: todo\n(+ 1 2) Answer: todo\n"},{"id":10,"href":"/sicp/chapter01/exercise-1.01.html","title":"Exercise 1.01","section":"Sicp","content":" Question: Below is a sequence of expressions. What is the result printed by the interpreter in response to each expression? Assume that the sequence is to be evaluated in the order in which it is presented.\n10 (+ 5 3 4) (- 9 1) (/ 6 2) (+ (* 2 4) (- 4 6)) (define a 3) (define b (+ a 1)) (+ a b (* a b)) (= a b) (if (and (\u0026gt; b a) (\u0026lt; b (* a b))) b a) (cond ((= a 4) 6) ((= b 4) (+ 6 7 a)) (else 25)) (+ 2 (if (\u0026gt; b a) b a)) (* (cond ((\u0026gt; a b) a) ((\u0026lt; a b) b) (else -1)) (+ a 1)) Answer: \u0026gt; 10 10 \u0026gt; (+ 5 3 4) 12 \u0026gt; (- 9 1) 8 \u0026gt; (/ 6 2) 3 \u0026gt; (+ (* 2 4) (- 4 6)) 6 \u0026gt; (define a 3) \u0026gt; (define b (+ a 1)) \u0026gt; (+ a b (* a b)) 19 \u0026gt; (= a b) #f \u0026gt; (if (and (\u0026gt; b a) (\u0026lt; b (* a b))) b a) 4 \u0026gt; (cond ((= a 4) 6) ((= b 4) (+ 6 7 a)) (else 25)) 16 \u0026gt; (+ 2 (if (\u0026gt; b a) b a)) 6 \u0026gt; (* (cond ((\u0026gt; a b) a) ((\u0026lt; a b) b) (else -1)) (+ a 1)) 16 "},{"id":11,"href":"/notes/mctips.html","title":"Minecraft tips","section":"Notes","content":" Hoofden zetten Plaats het hoofd van SpelerNaam in je inventaris: :\n/give @p skull 1 3 {SkullOwner:\u0026#34;SpelerNaam\u0026#34;} Plaats het hoofd van een ghast in je inventaris: :\n/give @p skull 1 3 {SkullOwner:\u0026#34;MHF_Ghast\u0026#34;} Voor andere mobs: vervang MHF_Ghast door: :\nMHF_Alex MHF_Blaze MHF_CaveSpider MHF_Chicken MHF_Cow MHF_Creeper MHF_Enderman MHF_Ghast MHF_Golem MHF_Herobrine MHF_LavaSlime MHF_MushroomCow MHF_Ocelot MHF_Pig MHF_PigZombie MHF_Sheep MHF_Skeleton MHF_Slime MHF_Spider MHF_Squid MHF_Steve MHF_Villager MHF_WSkeleton MHF_Zombie Blokken: :\nMHF_Cactus MHF_Cake MHF_Chest MHF_CoconutB MHF_CoconutG MHF_Melon MHF_OakLog MHF_Present1 MHF_Present2 MHF_Pumpkin MHF_TNT MHF_TNT2 Bonus: :\nMHF_ArrowUp MHF_ArrowDown MHF_ArrowLeft MHF_ArrowRight MHF_Exclamation MHF_Question "},{"id":12,"href":"/notes/babs.html","title":"Babs","section":"Notes","content":" Introduction babs, (an acronym for \u0026#34;babs: a build system\u0026#34;) is a set of Makefiles meant to easily compile \u0026amp; link a set of interdependent modules, containing C/C++ source code, binaries like object files, static or dynamic libraries, etc …​\nEnvironment variables In order to do its work, babs needs 3 environment variables:\nBABS_DIR : the directory where the babs build system is located.\nSOURCE_DIR : the directory where the source modules are located.\nBUILD_DIR : the directory where all target and intermediate files are saved during the build process.\nThese variables are currently set by sourcing a script before running make. Ideally, they should be set while running`make`.\nFiles babs build system Folder structure babs/ module_common.mk make_common.mk platform/ platform.mk windows/ rules.mk definitions.mk libstdc++-6.dll libgcc_s_dw2-1.dll linux/ rules.mk definitions.mk source/ config.mk setenv module_common.mk make_common.mk Using babs A minimal example "},{"id":13,"href":"/notes/rp0w.html","title":"Headless install of Arch Linux on Raspberry Pi Zero W","section":"Notes","content":" Prerequisites Arch Linux, with the following packages dosfstools wpa_supplicant\nMicro SD card\nUSB stick with slot for Micro SD Card\nRaspberry Pi Zero W\nCreate an Arch Linux ARM system TODO : chroot binfmt qemu\nPartition Micro SD Card In Linux, list the available devices: :\nsudo fdisk -l If Linux is running inside VirtualBox, consult the list of devices in: Devices\u0026gt;USB\nInsert the Micro SD card in the USB adapter, and insert the adapter in a USB port.\nIf Linux is running inside VirtualBox, look up \u0026amp; select the new device that appeared in Devices\u0026gt;USB\nList the available devices again: :\nsudo fdisk -l The device that was added to the list is the Micro SD card.\nUseful commands Save existing partition layout: :\nsudo sfdisk -d /dev/sdc \u0026gt; part_layout.txt Partition a card according to a saved layout: :\nsudo sfdisk /dev/sdc \u0026lt; part_layout.txt Delete all partitions: :\nsudo sfdisk --delete /dev/sdc References https://archlinuxarm.org/platforms/armv6/raspberry-pi\nhttps://ladvien.com/installing-arch-linux-raspberry-pi-zero-w/\nhttps://wiki.debian.org/QemuUserEmulation\nhttp://blog.thijsbroenink.com/2015/10/emulate-file-system-with-different-architecture/\nhttps://raspberrypi.stackexchange.com/questions/165/emulation-on-a-linux-pc\n"},{"id":14,"href":"/testbed/highlight.html","title":"Syntax highlighting","section":"Testbed","content":" C++ program #include \u0026lt;iostream\u0026gt; using namespace std; int main() { cout \u0026lt;\u0026lt; \u0026#34;Hello world!\u0026#34; \u0026lt;\u0026lt; endl; return 0; } C program #include \u0026lt;stdlib.h\u0026gt; #include \u0026lt;stdio.h\u0026gt; #include \u0026lt;dlfcn.h\u0026gt; int main(int argc, char **argv) { void *handle; char *error; void (*fun)(); char fileName[300]; char* buildDir = getenv(\u0026#34;BUILD_DIR\u0026#34;); sprintf(fileName, \u0026#34;%s/toolkit/libtoolkit.so.1.0.0\u0026#34;, buildDir); printf(\u0026#34;fileName = %s\\n\u0026#34;, fileName); printf(\u0026#34;mark1\\n\u0026#34;); dlerror(); handle = dlopen ( fileName , RTLD_LAZY); if (!handle) { fputs (dlerror(), stderr); printf(\u0026#34;\\n\u0026#34;); exit(1); } printf(\u0026#34;mark2\\n\u0026#34;); fun = (void (*)()) dlsym(handle, \u0026#34;testfun1\u0026#34;); if ((error = dlerror()) != NULL) { fputs(error, stderr); printf(\u0026#34;\\n\u0026#34;); exit(1); } printf(\u0026#34;mark3\\n\u0026#34;); (*fun)(); printf(\u0026#34;mark4\\n\u0026#34;); dlclose(handle); } Python program def my_function(): \u0026#34;just a test\u0026#34; print 8/2 bash script #!/bin/bash if [ -z \u0026#34;$1\u0026#34; ]; then echo \u0026#34;Usage: $(basename $0) COMMAND\u0026#34; exit 0 fi . ~/tools/common.sh if [ \u0026#34;$?\u0026#34; -ne \u0026#34;0\u0026#34; ]; then echo \u0026#34;$0: Error while sourcing ~/tools/common.sh\u0026#34; \u0026gt;\u0026amp;2 exit 1 fi checkPrereq ~/tools/timestamp_id checkPrereq ~/tools/fullts logDir=${LOGOP_DIR:-~/log} fileName=\u0026#34;$(timestamp_id).txt\u0026#34; logFile=\u0026#34;$logDir/$fileName\u0026#34; # Obtain path to external time command, to avoid having to use # the limited shell built-in command. timeCmd=$(which time) # Print header echo ==== Start log: `date \u0026#39;+%Y-%m-%d %H:%M:%S\u0026#39;` | tee -a \u0026#34;$logFile\u0026#34; echo ==== Command: $* | tee -a \u0026#34;$logFile\u0026#34; echo ==== Logfile: $logFile | tee -a \u0026#34;$logFile\u0026#34; echo ==== Logscript: $(readlink -f $0) | tee -a \u0026#34;$logFile\u0026#34; echo | tee -a \u0026#34;$logFile\u0026#34; # Run the command and log its output $timeCmd -f \u0026#34;\\n==== Exit status: %x\\n==== Elapsed: %e seconds\u0026#34; $* 2\u0026gt;\u0026amp;1 | tee -a \u0026#34;$logFile\u0026#34; # Print footer echo ==== End log: `date \u0026#39;+%Y-%m-%d %H:%M:%S\u0026#39;` | tee -a \u0026#34;$logFile\u0026#34; # Update symlink \u0026#39;latest.txt\u0026#39; to point to latest logfile ln -sf \u0026#34;$fileName\u0026#34; \u0026#34;$logDir/latest.txt\u0026#34; "},{"id":15,"href":"/notes/android.html","title":"Android","section":"Notes","content":" Nexus 10 Boot in recovery mode https://www.android.gs/how-to-boot-google-nexus-10-recovery-mode/\nReset to factory defaults https://www.android.gs/how-to-hard-reset-the-google-nexus-10/\n"},{"id":16,"href":"/notes/cheatsheet.html","title":"Cheatsheet","section":"Notes","content":" Check folder size: du -sh foldername/ Clear trash folder (Ubuntu \u0026amp; friends): rm -rf ~/.local/share/Trash/files ~/.local/share/Trash/info Arch Linux guest VM in VirtualBox: Restore networking: sudo ip link set enp0s8 down \u0026amp;\u0026amp; sudo ip link set enp0s8 up \u0026amp;\u0026amp; curl www.google.com Mount USB drive Before inserting the USB drive, show list of devices: :\nsudo lsblk -f Insert USB drive, and select device in VirtualBox GUI menu ( Devices \u0026gt; USB \u0026gt; …​ )\nIn VM, show list of devices again to find the DEVICENAME of the new device: :\nsudo lsblk -f Mount the device: :\nsudo -i mkdir /mnt/usbstick mount /dev/DEVICENAME /mnt/usbstick wget Mirror site: :\nwget -mkE http://www.example.com Mirror subdirectory of website: :\nwget -mkE -np http://www.example.com/subdir/ Mirror full web page: :\nwget -pkE -np -nH -nd http://www.example.com/page.html wget -np -k -p -nd -nH -H -E http://www.example.com/page.html Related: extract URLs (\u0026#39;http://…​\u0026#39; ones) from HTML file: :\nsed \u0026#39;s/\u0026lt;a href=\u0026#34;/\\n/g\u0026#39; index.html | sed \u0026#39;s/\u0026#34;\u0026gt;/\\n/g\u0026#39; | grep \u0026#34;^http:\u0026#34; | sort -u youtube-dl Download video from YouTube: :\nyoutube-dl \u0026#34;URL\u0026#34; Download audio from YouTube: :\nyoutube-dl -x -o \u0026#34;%(title)s.%(ext)s\u0026#34; \u0026#34;URL\u0026#34; Download audio \u0026amp; convert to mp3: :\nyoutube-dl -x --audio-format \u0026#34;mp3\u0026#34; -o \u0026#34;%(title)s.%(ext)s\u0026#34; \u0026#34;URL\u0026#34; Download videos listed in urls.txt: :\ncat urls.txt | xargs -I{} youtube-dl \u0026#34;{}\u0026#34; Download audio of videos listed in urls.txt: :\ncat urls.txt | xargs -I{} youtube-dl -x -o \u0026#34;%(autonumber)s - %(title)s.%(ext)s\u0026#34; \u0026#34;{}\u0026#34; Update program: :\nsudo youtube-dl -U zenity Zenity menu: :\nzenity --width=640 --height=480 --list --column \u0026#34;Number\u0026#34; --column \u0026#34;Name\u0026#34; --title=\u0026#34;Numbers and their names\u0026#34; --text=\u0026#34;\u0026#34; 1 one 2 two 3 three Zenity menu from textfile, 1st line is the title, 2nd line are the column names, separated by tab characters, rest of the file are line entries separated by newlines, divided in columns by tab characters: :\neval zenity --width=640 --height=480 --list $(cat menu.txt | sed \u0026#39;2q;d\u0026#39; | tr \u0026#39;\\t\u0026#39; \u0026#39;\\n\u0026#39; | sed \u0026#39;s/^/--column\\ \\\u0026#34;/\u0026#39; | sed \u0026#39;s/$/\\\u0026#34;/\u0026#39; | tr \u0026#39;\\n\u0026#39; \u0026#39; \u0026#39;) --title=$(cat menu.txt | head -n 1 | sed \u0026#39;s/^/\\\u0026#34;/\u0026#39; | sed \u0026#39;s/$/\\\u0026#34;/\u0026#39; | tr \u0026#39;\\n\u0026#39; \u0026#39; \u0026#39;) $(cat menu.txt | tail -n +3 | tr \u0026#39;\\t\u0026#39; \u0026#39;\\n\u0026#39; | sed \u0026#39;s/^/\\\u0026#34;/\u0026#39; | sed \u0026#39;s/$/\\\u0026#34;/\u0026#39; | tr \u0026#39;\\n\u0026#39; \u0026#39; \u0026#39;) tail tail -f /var/log/messages mount Mount ext3 partition: :\nsudo mkdir /media/bigpart sudo mount /dev/sda4 /media/bigpart -t ext3 Auto-mount USB drive at startup. Files owned by user with uid==1000. Put this in /etc/fstab:\nUUID=5F04-234F /media/USB_HDD auto nosuid,nodev,nofail,uid=1000,gid=1000,umask=022,fmask=133,dmask=022 0 0 Remarks:\nThe value for UUID can be obtained with the command blkid.\nThe mount point (in this case /media/USB_HDD) must exist.\nThe octal permission masks are not the same as in chmod. Subtract every digit from 7 to convert between the two. See table below.\nSymbolic chmod fstab -rw-r—​r--\n644\n133\nrwxr-xr-x\n755\n022\nbash Redirection in bash Redirect stderr of command to stdout: :\nls 2\u0026gt;\u0026amp;1 Don’t output anything: :\nls \u0026gt; /dev/null 2\u0026gt;\u0026amp;1 Echo to stderr: :\necho Hello \u0026gt;\u0026amp;2 Iterate over output of command, one line per iteration, and write output to a file: :\nwhile read line; do echo Another line: $line done \u0026lt; \u0026lt;(some_command arg1 arg2) \u0026gt; afile.txt Send value of a variable as standard input (stdin) to a command, and capture output in another variable: :\n$ myvar=\u0026#34;one two\u0026#34; $ yourvar=$(tr \u0026#39; \u0026#39; \u0026#39;_\u0026#39; \u0026lt;\u0026lt;\u0026lt;$myvar) $ echo $yourvar one_two Send value of a variable as input to a chain of piped commands, and capture output in another variable: :\n$ myvar=abcde $ yourvar=$(tr \u0026#39;a\u0026#39; \u0026#39;b\u0026#39; \u0026lt;\u0026lt;\u0026lt;$myvar | tr \u0026#39;b\u0026#39; \u0026#39;c\u0026#39; | tr \u0026#39;c\u0026#39; \u0026#39;d\u0026#39;) $ echo $yourvar dddde Truncate a file (wipe its contents): :\n\u0026gt; myfile.txt Booleans in bash hot=true if $hot; then echo \u0026#34;It\u0026#39;s hot\u0026#34; else echo \u0026#34;It\u0026#39;s cold\u0026#34; fi Globbing in bash Test if glob expands to anything: :\ntheGlob=*.html if stat -t $theGlob \u0026gt; /dev/null 2\u0026gt;\u0026amp;1; then echo *.html else echo No matches found. fi or with \u0026#34;find\u0026#34;: :\ntheGlob=*.html if [ -n \u0026#34;$(find . -maxdepth 1 -name \u0026#34;$theGlob\u0026#34; -print -quit)\u0026#34; ]; then echo *.html else echo No matches found. fi Variable assignment in bash Set the variable logDir to $LOG_DIR, or \u0026#39;~/log\u0026#39; if $LOG_DIR is an empty string: :\nlogDir=${LOG_DIR:-~/log} Example: :\n$ someVar=foo $ emptyVar= $ myVar=${someVar:-bar} $ yourVar=${emptyVar:-bar} $ echo myVar = $myVar; echo yourVar = $yourVar myVar = foo yourVar = bar Set the variable myVar to \u0026#39;foo\u0026#39; if $myVar is an empty string, otherwise leave myVar unchanged :\n: ${myVar:=foo} Example: :\n$ myVar=foo $ yourVar= $ : ${myVar:=bar} $ : ${yourVar:=bar} $ echo myVar = $myVar; echo yourVar = $yourVar myVar = foo yourVar = bar Equivalent of ternary operator in bash: :\n[[ \u0026#34;$year\u0026#34; = \u0026#34;leapyear\u0026#34; ]] \u0026amp;\u0026amp; numdays=366 || numdays=365 Keyboard shortcuts in bash: Clear screen: :\nctrl-l Open editor to write command in: :\nCtrlv-XE Keyboard shortcuts (from: http://www.getoffmalawn.com/blog/useful-bash-shortcuts): :\nMovement -------- Shortcut Action Ctrl-a Move to the start of the line Ctrl-e Move to the end of the line Ctrl-b Move back one character Alt-b Move back one word Ctrl-f Move forward one character Alt-f Move forward one word Ctrl-] x Move the cursor forward to next occurance of x Alt-Ctrl-] x Move the cursor backward to the next occurance of x Line Modification ----------------- Shortcut Action Ctrl-u Delete from the cursor to the beginning of the line Ctrl-k Delete from the cursor to the end of the line Esc Backspace Delete back a word Alt-d Delete forward a word Alt-r Undo all changes to the line Ctrl-y Paste any text deleted with previous shortcuts Ctrl-e Esc-t Swap order of the last two arguments History Utilisation ------------------- Shortcut Action Ctrl-x Ctrl-u Undo the last change to the line Ctrl-r Incremental reverse search of history Alt-p Non-incremental reverse search of history Ctrl-L Clear the screen (doesn\u0026#39;t wipe current line) !! Execute last command in history !abc Execute last command in history beginning with abc !n Execute nth command in history !$ Last argument of previous command !^ First argument of previous command ^abc^xyz Replace first occurance of abc with xyz in previous command and execute it Alt-. (period) Paste last word from previous command after cursor position (repeat to cycle through previous commands) Miscellaneous bash commands: List commands found in bash history, sorted by usage: :\ncat ~/.bash_history | cut -f1 -d\u0026#39; \u0026#39; | sort | uniq -c | sort -n -r | more ln Create hard links in a folder to all files in another folder, eg: :\nln -t ~/.gnome2/nautilus-scripts ~/tools/nautilus/* Create symbolic link named \u0026#39;LNK\u0026#39; to target file named \u0026#39;TGT\u0026#39;: :\nln -s TGT LNK Run command in background and return to shell immediately (e.g. \u0026#39;firefox index.html\u0026#39;). Don’t write any output to nohup.out. :\nnohup firefox index.html \u0026gt; /dev/null 2\u0026gt;\u0026amp;1 tar Create tar.gz from directory: :\ntar cpzf mydir.tar.gz mydir Extract directory from tar.gz file: :\ntar xzf mydir.tar.gz Check Linux version cat /etc/issue or\nlsb_release -a or\ncat /etc/lsb-release or\nuname -a or\ncat /proc/version Logfiles Browse syslog with vim (requires https://github.com/bergoid/rabot): :\nfind /var/log -maxdepth 1 | grep syslog | sort | flon Batch renaming Replace a substring \u0026#39;foo\u0026#39; with \u0026#39;bar\u0026#39; in all names of textfiles\nOutput every renaming command for review: :\nfor filename in *.txt ; do echo mv \\\u0026#34;$filename\\\u0026#34; \\\u0026#34;${filename//foo/bar}\\\u0026#34;; done Execute the reviewed commands: :\nfor filename in *.txt ; do echo mv \\\u0026#34;$filename\\\u0026#34; \\\u0026#34;${filename//foo/bar}\\\u0026#34;; done | /bin/bash ls, find, grep List all filenames in directory tree: :\nfind . -print or: :\nfind . or: :\nfind $(pwd) List files in reverse chronological order: :\nls -lt List the the most recently modified files in directory tree: :\nfind . -type f -exec stat --format \u0026#39;%Y :%y %n\u0026#39; {} \\; | sort -nr | cut -d: -f2- | head List files in reverse order by size: :\nls -lS List only filenames: :\nls -m1 Find all files matching \u0026#39;*.c\u0026#39;: :\nfind . -name \\*.c Find directories named \u0026#39;mydir\u0026#39;: :\nfind . -type d -name mydir Search for \u0026#39;pattern\u0026#39; in all .cpp files in \u0026#39;mydir\u0026#39;, recursively: :\ngrep pattern -nr --include=\\*.cpp mydir Search for \u0026#39;pattern\u0026#39; in all .cpp and .h files in \u0026#39;mydir\u0026#39;, recursively: :\ngrep pattern -nr --include=\\*.{cpp,h} mydir Search for \u0026#39;pattern\u0026#39; in all files in current dir, but don’t recurse into subdirectories: :\ngrep -d skip pattern * Replace all occurrences of \u0026#39;oldstring\u0026#39; with \u0026#39;newstring\u0026#39; in all .txt files in directory tree rooted in \u0026#39;.\u0026#39;:\nfind . -name \u0026#39;*.txt\u0026#39; -type f -print0 | xargs -0 sed -i \u0026#39;s|oldstring|newstring|g\u0026#39; Remove all .flac files in directory tree rooted in \u0026#39;.\u0026#39;:\nfind . -name \u0026#39;*.flac\u0026#39; -type f -print0 | xargs -0 rm Compare 2 directories: print 2 columns of files unique to either directory:\ncomm -3 \u0026lt;(find dir1 -type f -printf \u0026#39;%f\\n\u0026#39; | sort -u) \u0026lt;(find dir2 -type f -printf \u0026#39;%f\\n\u0026#39; | sort -u) directories cd into parent dir of currently running bash script: :\ncd $(dirname $(readlink -f $0)) Lines in files Output Nth line of file :\nmore +N file | head -n 1 or\nhead -N file | tail -1 Count the number of lines in file: :\nwc -l \u0026lt; my_text.txt Modify files Remove all blank lines :\ncat file.txt | sed \u0026#39;/^\\s*$/d\u0026#39; \u0026gt; file2.txt or in-place: :\nsed -i \u0026#39;/^\\s*$/d\u0026#39; file.txt Package management dpkg Show (among other info) dependencies of .deb file: :\ndpkg -I package_file.deb Install a .deb file: :\nsudo dpkg -i package_file.deb Uninstall a .deb file: :\nsudo dpkg -r package_file.deb List all installed packages: :\ndpkg -l List files provided by package: :\ndpkg -L packagename pacman Install a package :\npacman -Syu package_name Check if a package is installed: :\npacman -Q package_name List all files owned by an installed package: :\npacman -Ql package_name Find package that owns a given file :\npacman -Qo file_path Display info about an installed package: :\npacman -Qi package_name Display info about a package: :\npacman -Si package_name Uninstall a package and its orphaned dependencies: :\npacman -Rs package_name Clean pacman cache ( /var/cache/pacman/pkg ): :\npacman -Scc List all packages from a given repository (here \u0026#39;community\u0026#39; as an example): :\npaclist community Print dependency tree of a package: :\npactree packagename OpenBox Edit the OpenBox menu: :\nvi ~/.config/openbox/menu.xml Edit the OpenBox settings: :\nvi ~/.config/openbox/rc.xml Go to location of .desktop files: :\ncd /usr/share/applications Reconfigure OpenBox: :\nopenbox --reconfigure Make bootable USB stick from .iso file From http://crunchbang.org/forums/viewtopic.php?id=23267\nDetermine what device your USB is. With your USB plugged in run: :\nsudo ls -l /dev/disk/by-id/*usb* This should produce output along the lines of: :\nlrwxrwxrwx 1 root root 9 2010-03-15 22:54 /dev/disk/by-id/usb-_USB_DISK_2.0_077508380189-0:0 -\u0026gt; ../../sdb lrwxrwxrwx 1 root root 10 2010-03-15 22:54 /dev/disk/by-id/usb-_USB_DISK_2.0_077508380189-0:0-part1 -\u0026gt; ../../sdb1 Now cd to where your *.iso is :\ncd ~/downloads Example :\nsudo dd if=filename.iso of=/dev/usbdevice; sync let’s say the iso is named mini.iso and your USB device is sdb\nExample :\nsudo dd if=mini.iso of=/dev/sdb; sync vim Some shortcuts: :\nDeleting text: dd Delete line dw Delete rest of word, until (but excluding) start of next word D Delete rest of line (including character under cursor) d$ \u0026#34; d0 Delete beginning of line before cursor x Delete character da( delete a set of matching parens and everything in them S substitute line (i.e. replace entire line with an empty line and go to insert mode) :%s/\\s\\+$// delete trailing whitespace on all lines Inserting text: i Insert text before cursor a Insert text after cursor A Append text to the end of a line I Insert text before the first non-blank in the line C Replace rest of line o Insert new line above cursor O Insert new line below cursor ctrl-v\u0026lt;tab\u0026gt; Insert tab character even when expandtab is on :r !ls Insert output of shell command into text (here: ls) Transforming text: ctrl-a increment number under cursor ctrl-x decrement number under cursor u undo ctrl-r redo Moving: g; jump back to last edited position. g_ go to last non-whitespace character on line w go to start of next word e go to end of (next) word b go start of (previous) word W go to start of next word (words are whitespace-delimited) E go to end of word (words are whitespace-delimited) B go start of (previous) word (words are whitespace-delimited) zz put current line at the center of the screen zz move current line to the middle of the screen zt move current line to the top of the screen zb move current line to the bottom of the screen Ctrl-e Moves screen up one line Ctrl-y Moves screen down one line Ctrl-u Moves screen up ½ page Ctrl-d Moves screen down ½ page Ctrl-b Moves screen up one page Ctrl-f Moves screen down one page Selecting pieces of text: vw select from cursor to start of next word vb select from cursor to start of word under cursor vaw select word under cursor vi( select parens block, parens excluded va( select parens block, parens included vi\u0026#34;, vi\u0026#39;, vi[, vi\u0026lt;, vi{ analogous as 2 lines higher va\u0026#34;, va\u0026#39;, va[, va\u0026lt;, va{ analogous as 2 lines higher vit select text between HTML tags vat select text between HTML tags, together with the tags themselves File handling: :e filename Open new file in editor :e! filename Open new file in editor, discard buffer :e . Browse current directory :w Write buffer :w filename Write buffer to filename :q Exit vim ZZ Save buffer and exit vim :x \u0026#34; ZQ Discard buffer and exit vim :q! \u0026#34; Searching: /searchstring search for searchstring /searchstring\\c case-insensitive search for searchstring :%s/old/new/g replace all occurrences of \u0026#39;old\u0026#39; with \u0026#39;new\u0026#39; :%s/\\\u0026lt;old\\\u0026gt;/new/g same, but whole word only :%s/old\\c/new/g replace all case-insensitive matches of \u0026#39;old\u0026#39; with \u0026#39;new\u0026#39; :%s/old/new/gc replace all occurrences of \u0026#39;old\u0026#39; with \u0026#39;new\u0026#39;, confirm each substitution :%s/\\t/ /g replace all tabs with 4 spaces Tabs: :set expandtab :set tabstop=4 Comment all lines of a block Go to the first line, press ctrl-v, select until last line, press I#\u0026lt;Esc\u0026gt; Reselect block: gv Uncomment all lines of a block Go to the first line, press ctrl-v, select until last line, press x Multi-window: Ctrl-w o Close all windows except current: :on idem Ctrl-w q Close current window Ctrl-w p Switch to previously accessed window: Colors: Show highlight groups with their current color: :so $VIMRUNTIME/syntax/hitest.vim scp Copy the file \u0026#34;foobar.txt\u0026#34; from the local host to a remote host :\nscp foobar.txt your_username@remotehost.edu:some/remote/directory Copy the file \u0026#34;foobar.txt\u0026#34; from a remote host to the local host :\nscp your_username@remotehost.edu:foobar.txt some/local/directory Copy the directory \u0026#34;foo\u0026#34; from the local host to a remote host’s directory \u0026#34;bar\u0026#34; :\nscp -r foo your_username@remotehost.edu:some/remote/directory/bar Copy the directory \u0026#34;foo\u0026#34; from a remote host to the local host’s directory \u0026#34;bar\u0026#34; :\nscp -r your_username@remotehost.edu:some/remote/directory/foo bar apt-get and dpkg Show info about file.deb: :\ndpkg -I file.deb echo text and redirect to privileged file: echo \u0026#39;some text\u0026#39; | sudo tee -a /etc/some.file Start/stop/enable/disable daemons Enable the ssh daemon: :\nupdate-rc.d ssh defaults Disable it: :\nupdate-rc.d -f ssh remove Start daemon: :\nsudo service ssh start Restart daemon: :\nsudo service ssh restart Stop daemon: :\nsudo service ssh stop List of options for \u0026#39;setxkbmap\u0026#39;: vi /usr/share/X11/xkb/rules/base.lst tmux Create new session: :\n$ tmux new -s session-name Detach from session: :\n\u0026lt;CTRL-b\u0026gt; d Attach to first available session: :\n$ tmux a Attach to specific session: :\n$ tmux a -t session-name Install Oracle Java 7 in Debian Wheezy: From: http://stackoverflow.com/questions/15543603/installing-java-7-oracle-in-debian-via-apt-get\nsudo su echo \u0026#34;deb http://ppa.launchpad.net/webupd8team/java/ubuntu precise main\u0026#34; | tee -a /etc/apt/sources.list echo \u0026#34;deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu precise main\u0026#34; | tee -a /etc/apt/sources.list apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys EEA14886 apt-get update apt-get install oracle-java7-installer Git Create a tag Create a tag both locally and on the remote:\ntagname=MY_TAG \u0026amp;\u0026amp; git tag -a $tagname -m \u0026#34;$tagname\u0026#34; \u0026amp;\u0026amp; git push origin $tagname Delete a tag Delete a tag both on the remote and locally:\ntagname=MY_TAG \u0026amp;\u0026amp; git push --delete origin $tagname \u0026amp;\u0026amp; git tag --delete $tagname Create a branch Create a branch both locally and on the remote:\nbranchname=MY_BRANCH \u0026amp;\u0026amp; git checkout -b $branchname \u0026amp;\u0026amp; git push -u origin $branchname Delete a branch Delete a branch both on the remote and locally:\nbranchName=MY_BRANCH \u0026amp;\u0026amp; git push --delete origin $branchName \u0026amp;\u0026amp; git branch --delete $branchName Revert some of the files in a commit List all files changed in a commit, select some of them and revert the selected ones to their previous state:\ncommitHash=320aacfe3ad \u0026amp;\u0026amp; git diff-tree --no-commit-id --name-only -r $commitHash | pickn | xr git checkout ${commitHash}~1 -- Show all tags that contain a given commit git tag --contains HASH Web project: use Github Pages for a live demo Source:\nhttps://help.github.com/articles/creating-project-pages-manually/\nhttp://lea.verou.me/2011/10/easily-keep-gh-pages-in-sync-with-master/\nTo create a Github Pages presence for your repo:\ngit checkout --orphan gh-pages git merge master git push origin gh-pages git checkout master The demo will be visible at username.github.io/reponame\nTo get the demo up-to-date with the master branch:\ngit checkout gh-pages git merge master git push origin gh-pages git checkout master Networking List processes and the ports they’re listening on:\nsudo netstat -tulpn Or:\nsudo netstat -an | less List iptables rules:\nsudo iptables -L -n postgresql .pgpass file Linux: ~/.pgpass Windows: %APPDATA%/postgresql/pgpass.conf\nThe file should contain lines of the following format:\nhostname:port:database:username:password Example:\nlocalhost:*:*:postgres:postgres pg_dump pg_dump --username=MYUSERNAME --file=MYDUMPFILE --format=custom DBNAME pg_restore --username=MYUSERNAME --clean --dbname=DBNAME MYDUMPFILE Google Test Filter tests at compile-time int main(int argc, char **argv) { ::testing::GTEST_FLAG(filter) = \u0026#34;testSuiteName.testName\u0026#34;; ::testing::InitGoogleTest(\u0026amp;argc, argv); RUN_ALL_TESTS(); } This is equivalent to the run-time argument: --gtest_filter=testSuiteName.testName\n"},{"id":17,"href":"/testbed/asciidoc.html","title":"Asciidoc markup","section":"Testbed","content":" Text formatting Description Syntax Result Remark Emphasis, quotes\nOne \u0026#39;Two\u0026#39; Three\nOne \u0026#39;Two\u0026#39; Three\nEmphasis, underscores\nOne Two Three\nOne Two Three\nEmphasis, quotes, unconstrained\nOne\u0026#39;\u0026#39;Two\u0026#39;\u0026#39;Three\nOne\u0026#39;\u0026#39;Two\u0026#39;\u0026#39;Three\nEmphasis, underscores, unconstrained\nOneTwoThree\nOneTwoThree\nStrong\nOne Two Three\nOne Two Three\nStrong, unconstrained\nOneTwoThree\nOneTwoThree\nMonospace\nOne +Two+ Three\nOne Two Three\nMonospace, unconstrained\nOneTwoThree\nOneTwoThree\nSingle quote\nOne `Two´ Three\nOne `Two´ Three\nDoesn’t seem to work\nDouble quotes\nOne ``Two´´ Three\nOne ``Two´´ Three\nDoesn’t seem to work\nSingle quote, unconstrained\nOne``Two´´Three\nOne``Two´´Three\nDoesn’t seem to work\nUnquoted\nOne Two Three\nOne Two Three\nMeant to add inline attributes (see next line)\nColored text\nOne Two Three\nOne Two Three\nColored background\nOne Two Three\nOne Two Three\nBig text\nOne Two Three\nOne Two Three\nUnderlined text\nOne Two Three\nOne Two Three\nOverlined text\nOne Two Three\nOne Two Three\nLine-through text\nOne Two Three\nOne Two Three\nCombinations\nOne Two Three\nOne Two Three\nCombinations, unconstrained\nOneTwoThree\nOneTwoThree\nBig text\nOne Two Three\nOne Two Three\nSuperscript\nOne Two Three\nOne Two Three\nMore superscript\nOneTwoThree\nOneTwoThree\nSubscript\nOne Two Three\nOne Two Three\nMore subscript\nOneTwoThree\nOneTwoThree\nParagraphs General syntax:\n[\u0026lt;STYLE\u0026gt;] Some text. Not broken by blank lines. Valid styles are: literal, verse, quote, listing, TIP, NOTE, IMPORTANT, WARNING, CAUTION, abstract, partintro, comment, example, sidebar, source, music, latex, graphviz\nExamples:\nNormal paragraphs Code:\nHow do you achieve a good balance between the test and control group? One good way is to \u0026#39;randomize\u0026#39; the subjects. You can do this by randomly assigning all the subjects to one group or the other, or by first stratifying them into similar subsets, and then randomly assigning members from each subset into the test and control groups. It wouldn\u0026#39;t do for the experimenter to assign subjects to one group or the other after having met the subjects; the experimenter might (consciously or unconsciously) assign healthier patients to one group. In some cases, you can assign all subjects to both groups: in psychology experiments that measure things like reaction time, you can every subject try every experimental condition (in randomized order), because there is little or no influence between each trial. Obviously, you can\u0026#39;t have subjects try every possibility on things like cardiac operations: you can only choose one option for each subject. Result:\nHow do you achieve a good balance between the test and control group? One good way is to \u0026#39;randomize\u0026#39; the subjects. You can do this by randomly assigning all the subjects to one group or the other, or by first stratifying them into similar subsets, and then randomly assigning members from each subset into the test and control groups. It wouldn’t do for the experimenter to assign subjects to one group or the other after having met the subjects; the experimenter might (consciously or unconsciously) assign healthier patients to one group.\nIn some cases, you can assign all subjects to both groups: in psychology experiments that measure things like reaction time, you can every subject try every experimental condition (in randomized order), because there is little or no influence between each trial. Obviously, you can’t have subjects try every possibility on things like cardiac operations: you can only choose one option for each subject.\nLiteral paragraphs Prefix with one or more spaces Code:\nHow do you achieve a good balance between the test and control group? One good way is to \u0026#39;randomize\u0026#39; the subjects. You can do this by randomly assigning all the subjects to one group or the other, or by first stratifying them into similar subsets, and then randomly assigning members from each subset into the test and control groups. It wouldn\u0026#39;t do for the experimenter to assign subjects to one group or the other after having met the subjects; the experimenter might (consciously or unconsciously) assign healthier patients to one group. In some cases, you can assign all subjects to both groups: in psychology experiments that measure things like reaction time, you can every subject try every experimental condition (in randomized order), because there is little or no influence between each trial. Obviously, you can\u0026#39;t have subjects try every possibility on things like cardiac operations: you can only choose one option for each subject. Result:\nHow do you achieve a good balance between the test and control group? One good way is to \u0026#39;randomize\u0026#39; the subjects. You can do this by randomly assigning all the subjects to one group or the other, or by first stratifying them into similar subsets, and then randomly assigning members from each subset into the test and control groups. It wouldn\u0026#39;t do for the experimenter to assign subjects to one group or the other after having met the subjects; the experimenter might (consciously or unconsciously) assign healthier patients to one group. In some cases, you can assign all subjects to both groups: in psychology experiments that measure things like reaction time, you can every subject try every experimental condition (in randomized order), because there is little or no influence between each trial. Obviously, you can\u0026#39;t have subjects try every possibility on things like cardiac operations: you can only choose one option for each subject. Add literal style Code:\n[literal] How do you achieve a good balance between the test and control group? One good way is to \u0026#39;randomize\u0026#39; the subjects. You can do this by randomly assigning all the subjects to one group or the other, or by first stratifying them into similar subsets, and then randomly assigning members from each subset into the test and control groups. It wouldn\u0026#39;t do for the experimenter to assign subjects to one group or the other after having met the subjects; the experimenter might (consciously or unconsciously) assign healthier patients to one group. [literal] In some cases, you can assign all subjects to both groups: in psychology experiments that measure things like reaction time, you can every subject try every experimental condition (in randomized order), because there is little or no influence between each trial. Obviously, you can\u0026#39;t have subjects try every possibility on things like cardiac operations: you can only choose one option for each subject. Result:\nHow do you achieve a good balance between the test and control group? One good way is to \u0026#39;randomize\u0026#39; the subjects. You can do this by randomly assigning all the subjects to one group or the other, or by first stratifying them into similar subsets, and then randomly assigning members from each subset into the test and control groups. It wouldn\u0026#39;t do for the experimenter to assign subjects to one group or the other after having met the subjects; the experimenter might (consciously or unconsciously) assign healthier patients to one group. In some cases, you can assign all subjects to both groups: in psychology experiments that measure things like reaction time, you can every subject try every experimental condition (in randomized order), because there is little or no influence between each trial. Obviously, you can\u0026#39;t have subjects try every possibility on things like cardiac operations: you can only choose one option for each subject. Verse paragraphs Code:\n[verse, William Blake, from Auguries of Innocence] To see a world in a grain of sand, And a heaven in a wild flower, Hold infinity in the palm of your hand, And eternity in an hour. Result:\nTo see a world in a grain of sand, And a heaven in a wild flower, Hold infinity in the palm of your hand, And eternity in an hour. — William Blake from Auguries of Innocence Quote paragraphs Code:\n[quote, Bertrand Russell, The World of Mathematics (1956)] A good notation has subtlety and suggestiveness which at times makes it almost seem like a live teacher. Result:\nA good notation has subtlety and suggestiveness which at times makes it almost seem like a live teacher. — Bertrand Russell The World of Mathematics (1956) Admonition paragraphs Use prefix Code:\nNOTE: Mind the gap TIP: Mind the gap IMPORTANT: Mind the gap WARNING: Mind the gap CAUTION: Mind the gap Result:\nNote Mind the gap Tip Mind the gap Important Mind the gap Warning Mind the gap Caution Mind the gap Add style Code:\n[NOTE] Mind the gap [TIP] Mind the gap [IMPORTANT] Mind the gap [WARNING] Mind the gap [CAUTION] Mind the gap Result:\nNote Mind the gap Tip Mind the gap Important Mind the gap Warning Mind the gap Caution Mind the gap Open blocks General syntax:\n[\u0026lt;STYLE\u0026gt;] -- ... -- Valid styles : literal, verse, quote, listing, TIP, NOTE, IMPORTANT, WARNING, CAUTION, abstract, partintro, comment, example, sidebar, source, music, latex, graphviz\nExamples:\nListing Code:\n[listing] -- #include \u0026lt;stdio.h\u0026gt; int main() { printf(\u0026#34;Hello World!\\n\u0026#34;); exit(0); } -- Result:\n#include \u0026lt;stdio.h\u0026gt; int main() { printf(\u0026#34;Hello World!\\n\u0026#34;); exit(0); } Literal Code:\n[listing] -- How do you achieve a good balance between the test and control group? One good way is to \u0026#39;randomize\u0026#39; the subjects. You can do this by randomly assigning all the subjects to one group or the other, or by first stratifying them into similar subsets, and then randomly assigning members from each subset into the test and control groups. It wouldn\u0026#39;t do for the experimenter to assign subjects to one group or the other after having met the subjects; the experimenter might (consciously or unconsciously) assign healthier patients to one group. -- Result:\nHow do you achieve a good balance between the test and control group? One good way is to \u0026#39;randomize\u0026#39; the subjects. You can do this by randomly assigning all the subjects to one group or the other, or by first stratifying them into similar subsets, and then randomly assigning members from each subset into the test and control groups. It wouldn\u0026#39;t do for the experimenter to assign subjects to one group or the other after having met the subjects; the experimenter might (consciously or unconsciously) assign healthier patients to one group. Lists Bulleted lists Code:\n- Top level item * Sublevel * Sublevel ** Subsublevel *** And deeper **** Four asterisks ***** Up to five *** Level 3 ** Subsublevel - Top level item Result:\nTop level item\nSublevel\nSublevel\nSubsublevel\nAnd deeper\nFour asterisks\nUp to five\nLevel 3\nSubsublevel\nTop level item\nNumbered lists Explicit numbering Code:\n1. Arabic (decimal) numbered list item. a. Lower case alpha (letter) numbered list item. b. Lower case alpha (letter) numbered list item. A. Upper case alpha (letter) numbered list item. B. Upper case alpha (letter) numbered list item. C. Upper case alpha (letter) numbered list item. i) Lower case roman numbered list item. ii) Lower case roman numbered list item. iii) Lower case roman numbered list item. iv) Lower case roman numbered list item. I) Upper case roman numbered list item. Result:\nArabic (decimal) numbered list item.\nLower case alpha (letter) numbered list item.\nLower case alpha (letter) numbered list item.\nUpper case alpha (letter) numbered list item.\nUpper case alpha (letter) numbered list item.\nUpper case alpha (letter) numbered list item.\nLower case roman numbered list item.\nLower case roman numbered list item.\nLower case roman numbered list item.\nLower case roman numbered list item.\nUpper case roman numbered list item.\nImplicit numbering Code:\n. Arabic (decimal) numbered list item. .. Lower case alpha (letter) numbered list item. ... Lower case roman numbered list item. .... Upper case alpha (letter) numbered list item. ..... Upper case roman numbered list item. Result:\nArabic (decimal) numbered list item.\nLower case alpha (letter) numbered list item.\nLower case roman numbered list item.\nUpper case alpha (letter) numbered list item.\nUpper case roman numbered list item.\nMixing styles Also using style attributes.\nCode:\n- Top level bullets * Second level bullets * Second level bullets [upperroman] .. Third level: uppercase roman numerals .. Third level: uppercase roman numerals [arabic] ... Level 4: Arabic numerals ... Level 4: Arabic numerals Result:\nTop level bullets\nSecond level bullets\nSecond level bullets\nThird level: uppercase roman numerals\nThird level: uppercase roman numerals\nLevel 4: Arabic numerals\nLevel 4: Arabic numerals\nLabeled Lists Code:\n*Canada*:: Item text can consist of several paragraphs. Second line of first paragraph. Second paragraph is not auto-indented however. *USA*:: First paragraph. Second one. Indented in source code. It becomes \u0026#34;literal\u0026#34;. California::: In source, text can be on same line as label. Texas::: Houston;; Dallas;; Item text is needed to end this list. Result:\nCanada Item text can consist of several paragraphs. Second line of first paragraph.\nSecond paragraph is not auto-indented however.\nUSA First paragraph.\nSecond one. Indented in source code. It becomes \u0026#34;literal\u0026#34;. California In source, text can be on same line as label.\nTexas Houston Dallas Item text is needed to end this list.\nHorizontal labeled Lists Code:\n[horizontal] *Canada*:: Item text. Indented second paragraph. *USA*:: Item text. Result:\nCanada Item text.\nUSA Item text.\nQuestions \u0026amp; Answers Question one\nAnswer one.\nQuestion two\nAnswer two.\nGlossary Glossary entries are an example of a style of AsciiDoc labeled lists.\nCode:\n[glossary] A glossary term:: The corresponding (indented) definition. A second glossary term:: The corresponding (indented) definition. Result:\nA glossary term The corresponding (indented) definition.\nA second glossary term The corresponding (indented) definition.\nBibliography Code:\n[bibliography] .Books - [[[taoup]]] Eric Steven Raymond. \u0026#39;The Art of Unix Programming\u0026#39;. Addison-Wesley. ISBN 0-13-142901-9. - [[[walsh-muellner]]] Norman Walsh \u0026amp; Leonard Muellner. \u0026#39;DocBook - The Definitive Guide\u0026#39;. O\u0026#39;Reilly \u0026amp; Associates. 1999. ISBN 1-56592-580-7. [bibliography] .Articles - [[[abc2003]]] Gall Anonim. \u0026#39;An article\u0026#39;, Whatever. 2003. Links to bibliography entries: Please read \u0026lt;\u0026lt;taoup\u0026gt;\u0026gt;. For a guide on DcoBook, see: \u0026lt;\u0026lt;walsh-muellner\u0026gt;\u0026gt; This idea was first introduced in \u0026lt;\u0026lt;abc2003\u0026gt;\u0026gt; Result:\nBooks [taoup] Eric Steven Raymond. \u0026#39;The Art of Unix Programming\u0026#39;. Addison-Wesley. ISBN 0-13-142901-9.\n[walsh-muellner] Norman Walsh \u0026amp; Leonard Muellner. \u0026#39;DocBook - The Definitive Guide\u0026#39;. O’Reilly \u0026amp; Associates. 1999. ISBN 1-56592-580-7.\nArticles [abc2003] Gall Anonim. \u0026#39;An article\u0026#39;, Whatever. 2003.\nLinks to bibliography entries:\nPlease read [taoup].\nFor a guide on DcoBook, see: [walsh-muellner]\nThis idea was first introduced in [abc2003]\nList continuations Append block elements to a list with the + character.\nCode:\n1. Step one: rename original file + [literal] -- $ mv myfile.txt myfile_BAK.txt -- + 2. Step two: create new file + [literal] -- $ touch myfile.txt -- + 3. Step three: done! Result:\nStep one: rename original file\n$ mv myfile.txt myfile_BAK.txt Step two: create new file\n$ touch myfile.txt Step three: done!\nFootnotes Code:\nA footnote footnote:[An example footnote.]. A second footnote with a reference ID footnoteref:[note2,Second footnote.]. Finally a reference to the second footnote footnoteref:[note2]. Result:\nTODO: this is deprecated\nA footnote footnote:[An example footnote.]. A second footnote with a reference ID footnoteref:[note2,Second footnote.]. Finally a reference to the second footnote footnoteref:[note2]. Callouts $ mv myfile.txt myfile_BAK.txt (1) $ touch myfile.txt (2) Rename original file\nCreate new file\nMacros Links External links Code:\nhttps://www.example.com[Example domain] mailto:me@example.com[Mail me!] Result:\nExample domain\nMail me!\nLinks to local documents Code:\nA text file can be found link:hello.txt[here] Result:\nTODO: add file hello.txt\nA text file can be found link:hello.txt[here] Links inside document Code:\n[[THEFISH]] The fish is here: +\u0026lt;\u0026gt;\u0026lt;+ The fish can be found xref:THEFISH[here] Result:\nThe fish is here: \u0026lt;\u0026gt;\u0026lt;\nThe fish can be found here\nInline documents Images Code:\nimage:pripyat.jpg[alt=\u0026#34;Soviet-era mural inside post office. Pripyat, Ukraine.\u0026#34;,title=\u0026#34;Pripyat post office mural\u0026#34;] image:pripyat.jpg[alt=\u0026#34;Soviet-era mural inside post office. Pripyat, Ukraine.\u0026#34;,title=\u0026#34;Pripyat post office mural. Click for full size.\u0026#34;,height=256,link=\u0026#34;pripyat.jpg\u0026#34;] Result:\nTODO: add image file\nimage:pripyat.jpg[alt=\u0026#34;Soviet-era mural inside post office. Pripyat, Ukraine.\u0026#34;,title=\u0026#34;Pripyat post office mural\u0026#34;] image:pripyat.jpg[alt=\u0026#34;Soviet-era mural inside post office. Pripyat, Ukraine.\u0026#34;,title=\u0026#34;Pripyat post office mural. Click for full size.\u0026#34;,height=256,link=\u0026#34;pripyat.jpg\u0026#34;] Asciidoc files Code:\n[listing] -- include::hello.txt[] -- Result:\nTODO: add file hello.txt\n[listing] -- include::hello.txt[] -- Comments Code:\nThis line gets shown. // This one doesn\u0026#39;t. This one gets shown too. Result:\nThis line gets shown. This one gets shown too.\nConditionals Code:\n+doctitle+: \u0026#34;{doctitle}\u0026#34; +foo_attrib+: \u0026#34;{foo_attrib}\u0026#34; +OK+ is shown only if +doctitle+ is defined: ifdef::doctitle[] +OK+ endif::doctitle[] +OK+ is shown only if +foo_attrib+ is NOT defined: ifndef::foo_attrib[] +OK+ endif::foo_attrib[] ifdef::doctitle[This line is shown only if +doctitle+ is defined.] +OK+ is shown only if +doctitle+ OR +foo_attrib+ are defined: ifdef::doctitle,foo_attrib[] +OK+ endif::doctitle,foo_attrib[] +OK+ is shown only if +doctitle+ AND +foo_attrib+ are defined: ifdef::doctitle+foo_attrib[] +OK+ endif::doctitle+foo_attrib[] Result:\ndoctitle: \u0026#34;AsciiDoc markup testbed\u0026#34;\nfoo_attrib: \u0026#34;{foo_attrib}\u0026#34;\nOK is shown only if doctitle is defined: OK\nOK is shown only if foo_attrib is NOT defined: OK\nThis line is shown only if doctitle is defined.\nOK is shown only if doctitle OR foo_attrib are defined: OK\nOK is shown only if doctitle AND foo_attrib are defined:\nCommand macros Shell commands sys Displays stdout output of shell command.\nCode:\n[listing] -- \\sys::[seq 0 2 10] -- Result:\nsys::[seq 0 2 10] sys2 Displays stdout \u0026amp; stderr output of shell command.\nCode:\n[listing] -- \\sys::[(echo \u0026#34;sys, stdout\u0026#34; ; echo \u0026#34;sys, stderr\u0026#34; \u0026gt;\u0026amp;2)] \\sys2::[(echo \u0026#34;sys2, stdout\u0026#34; ; echo \u0026#34;sys2, stderr\u0026#34; \u0026gt;\u0026amp;2)] -- Result:\nsys::[(echo \u0026#34;sys, stdout\u0026#34; ; echo \u0026#34;sys, stderr\u0026#34; \u0026gt;\u0026amp;2)] sys2::[(echo \u0026#34;sys2, stdout\u0026#34; ; echo \u0026#34;sys2, stderr\u0026#34; \u0026gt;\u0026amp;2)] eval Displays the string value of a Python expression\nCode:\n\\eval::[\u0026#34;Pyhon interpreter: +\u0026#34; + sys.version + \u0026#34;+\u0026#34;] Result:\neval::[\u0026#34;Pyhon interpreter: \u0026#34; + sys.version + \u0026#34;\u0026#34;]\nTables Code:\n[cols=\u0026#34;3,^2,^2,10\u0026#34;,options=\u0026#34;header\u0026#34;] |========================================================= |Date |Duration |Avg HR |Notes |22-Aug-08 |10:24 | 157 | Worked out MSHR (max sustainable heart rate) by going hard for this interval. |22-Aug-08 |23:03 | 152 | Back-to-back with previous interval. |24-Aug-08 |40:00 | 145 | Moderately hard interspersed with 3x 3min intervals (2min hard + 1min really hard taking the HR up to 160). |========================================================= Result:\nDate Duration Avg HR Notes 22-Aug-08\n10:24\n157\nWorked out MSHR (max sustainable heart rate) by going hard for this interval.\n22-Aug-08\n23:03\n152\nBack-to-back with previous interval.\n24-Aug-08\n40:00\n145\nModerately hard interspersed with 3x 3min intervals (2min hard + 1min really hard taking the HR up to 160).\nSyntax highlighting Code:\n[source,bash] -- echo \u0026#34;Hello!\u0026#34; pwd -- Result:\necho \u0026#34;Hello!\u0026#34; pwd Code:\n[source,python] -- import sys print(\u0026#34;Python interpreter\u0026#34; + sys.version) -- Result:\nimport sys print(\u0026#34;Python interpreter\u0026#34; + sys.version) Math AsciiMathML The attribute asciimath needs to be defined.\nCode:\nasciimath:[x/x={(1,if x!=0),(text{undefined},if x=0):}] Result:\n\\$x/x={(1,if x!=0),(text{undefined},if x=0):}\\$\nLatexMathML Either define asciimath or latexmath.\nThe glyphs are too small when latexmath is defined.\nCode:\nlatexmath:[$\\sum_{n=1}^\\infty \\frac{1}{2^n}$] Result:\n\\(\\sum_{n=1}^\\infty \\frac{1}{2^n}\\)\n"},{"id":18,"href":"/arch/hetzner.html","title":"Installing Arch Linux on a Hetzner VPS","section":"Arch","content":" Boot live iso In the web config panel of the VPS, mount the Arch Linux .iso in your server \u0026amp; reboot. Connect to the server with the web console.\nloadkeys be-latin1 Network should work: :\ncurl www.google.com Syncronize the system clock with NTP :\ntimedatectl set-ntp true Create partition table :\nfdisk -l /dev/sda fdisk /dev/sda First, create a partition (sda1) of size 32 MB (+32M). Change its type to 1 (EFI System). Then, create a partion (sda2) with the rest of the available space.\nFormat the partitions:\nmkfs.fat -F 16 /dev/sda1 mkfs.ext4 /dev/sda2 Mount the root partition :\nmount /dev/sda2 /mnt Install the \u0026#39;base\u0026#39; package group :\npacstrap /mnt base vim Create an fstab file :\ngenfstab -U /mnt \u0026gt;\u0026gt; /mnt/etc/fstab \u0026#39;chroot\u0026#39; into the newly created system :\narch-chroot /mnt Set the timezone :\nln -s /usr/share/zoneinfo/Europe/Brussels /etc/localtime Use UTC in hardware clock. Initialize the hardware clock from current system time. :\nhwclock --systohc --utc Use US locale :\necho en_US.UTF-8 UTF-8 \u0026gt; /etc/locale.gen locale-gen echo LANG=en_US.UTF-8 \u0026gt; /etc/locale.conf Use Belgian keymap :\necho KEYMAP=be-latin1 \u0026gt; /etc/vconsole.conf Set hostname :\necho yeba \u0026gt; /etc/hostname Set localhost alias :\nvi /etc/hosts In /etc/hosts, add: :\n127.0.0.1 yeba.localdomain yeba Set password :\npasswd Install boot loader \u0026#39;grub\u0026#39; :\npacman -Syu grub grub-install --target=i386-pc /dev/sda \u0026amp;\u0026amp; grub-mkconfig -o /boot/grub/grub.cfg Create user useradd -m bert groupadd sudoers usermod -aG sudoers bert passwd bert allow group \u0026#39;sudoers\u0026#39; to use sudo (in conf file):\necho \u0026#39;%sudoers ALL=(ALL) ALL\u0026#39; \u0026gt; /etc/sudoers Install some packages:\npacman -Syu sudo vim ufw knockd lighttpd git use \u0026#39;vim\u0026#39; as \u0026#39;vi\u0026#39;:\nmv /usr/bin/vi /usr/bin/vi_BAK \u0026amp;\u0026amp; ln -s /usr/bin/vim /usr/bin/vi sshd config On the client:\nssh-copy-id bert@IP_ADDRESS On the server:\nvi /etc/ssh/sshd_config LogLevel VERBOSE PermitRootLogin no PubkeyAuthentication yes PasswordAuthentication no AuthorizedKeysFile .ssh/authorized_keys ChallengeResponseAuthentication no UsePAM yes AllowUsers bert Add 5s delay to failed login attempts:\nbash -c \u0026#34;echo auth optional pam_faildelay.so delay=5000000 \u0026gt;\u0026gt; /etc/pam.d/system-login\u0026#34; reboot needed for future ufw config:\nreboot now ufw, knockd ssh bert@IP_ADDRESS\nsudo -i ufw default deny ufw allow 22 ufw allow 80,443/tcp ufw enable vi /etc/knockd.conf [options] logfile = /var/log/knockd.log [SSH] sequence = PORT1,...,PORTN seq_timeout = 5 start_command = ufw allow from %IP% to any port 22 tcpflags = syn cmd_timeout = 10 stop_command = ufw delete allow from %IP% to any port 22 systemctl enable ufw.service systemctl start ufw.service systemctl enable knockd.service systemctl start knockd.service ufw delete allow 22 Customization Create dotfiles \u0026amp; tools:\nmkdir ~/tools \u0026amp;\u0026amp; cd ~/tools git clone https://github.com/bergoid/lswrappers.git git clone https://github.com/bergoid/rabot.git git clone https://github.com/bergoid/gt.git git clone https://github.com/bergoid/preppy.git git clone https://github.com/bergoid/dotfiles.git dotfiles/install_dotfiles echo preppy_hostnameColor=27 \u0026gt; ~/.localConfig Customize root env:\nsudo -i ln -s /home/bert/.tmux.conf .tmux.conf ln -s /home/bert/tools/dotfiles/.vim/ .vim ln -s /home/bert/tools/ tools ln -s /home/bert/.bash_profile .bash_profile ln -s /home/bert/.bashrc .bashrc spigot server Enable AUR\nsudo pacman -Syu base base-devel mkcd ~/aur Install JRE\ngit clone https://aur.archlinux.org/jre.git cd jre makepkg -si Install bukkit/spigot:\nmkcd ~/mc curl \u0026#34;https://hub.spigotmc.org/jenkins/job/BuildTools/lastSuccessfulBuild/artifact/target/BuildTools.jar\u0026#34; -o BuildTools.jar java -jar BuildTools.jar sudo pacman -Syu tmux dialog vi /etc/locale.gen Uncomment: \u0026#39;en_US.UTF-8 UTF-8\u0026#39;\nlocale-gen echo LANG=en_US.UTF-8 \u0026gt; /etc/locale.conf sudo ufw allow 24680 Removed jre9:\nsudo pacman -Rs jre Install jre8 cd ~/aur git clone https://aur.archlinux.org/jre8.git cd jre8 makepkg -si CURRENT STATE\n"}]